import Phaser from 'phaser'
import { Plugin as ActorPlugin } from '@eriengine/plugin-actor'
import { Plugin as IsometricScenePlugin } from '@eriengine/plugin-isometric-scene'
import { PointerPlugin as IsometricCursorPlugin, SelectPlugin as IsometricSelectPlugin } from '@eriengine/plugin-isometric-cursor'
import { DialoguePlugin, ModalPlugin } from '@eriengine/plugin-dialogue'
import { Plugin as FogOfWarPlugin } from '@eriengine/plugin-fog-of-war'
import { Plugin as SpatialAudioPlugin } from '@eriengine/plugin-spatial-audio'

import BaseScene from '@/BaseScene'
import BaseActor from '@/BaseActor'
{{ DATA_LISTS }}
{{ STORAGE_LISTS }}

type Audios = (typeof Audios[keyof typeof Audios])

/*
 *  주의!
 *  씬 파일 이름의 뒷 부분은 절대 변경하지 마십시오.
 *  이 뒷 부분은 씬이 참조해야할 스크립트와 맵의 정보를 담고 있습니다.
 *
 *  가령 파일명이 scene.ABCDE.ts 일 경우, ABCDE 부분은 절대 변경되어선 안됩니다.
 *  씬 파일의 이름을 변경하고 싶다면, newName.ABCDE.ts 의 방식으로 뒷 부분을 제외하고 변경하십시오.
 *
 *
 *
 *
 *  이곳에서 씬의 기본적인 설정을 변경할 수 있습니다.
 *  기본적인 작동을 위한 코드가 이미 작성되어 있습니다만,
 *  좀 더 정교한 프로그래밍을 원한다면 이곳에서 수정을 할 수 있습니다.
 *
 *  하지만 대부분의 기능은 스크립트를 이용하여 처리할 수 있습니다.
 *  가능하다면 스크립트 기능을 이용하도록 하십시오.
 */
export default class NewScene extends BaseScene {
    
  /**
   *  씬의 고유값입니다. 이 값은 다른 씬과 절대로 중복되어선 안됩니다. 절대 건드리지 마십시오.
   */
  static readonly Key: string = __filename

  /**
   *  씬의 우선순위입니다. 이 값이 클수록, 작은 값을 가진 씬보다 위에 보여집니다.  
   *  가령 씬A의 Depth가 0이고, 씬B의 Depth가 1일 경우, 씬B가 씬A보다 위에 보여집니다.
   */
  static readonly Depth: number = {{ DEPTH }}

  /**
   *  게임이 시작하면 이 씬을 자동으로 실행할 것인지 여부를 지정합니다.
   *  이 값을 true로 지정하면, 게임의 시작과 동시에 씬이 시작됩니다.
   *  이 값을 false로 지정하면, this.scene.launch 또는 this.scene.start 등의 메서드를 사용하여 수동으로 씬을 실행해야 합니다.
   * 
   *  하지만 씬 파일의 이름이 main일 경우, 이 값의 여부와 상관없이 무조건 자동으로 실행됩니다.
   * 
   *  일반적으로 씬은 자동으로 실행하지 않는 편이 좋습니다.
   */
  static readonly AutoStart: boolean = {{ AUTO_START }}

  /**
   *  씬에서 재생될 배경음악입니다.
   *  배경음악 기능을 사용하고 싶지 않다면 null로 지정하십시오.
   *  사용하고 싶다면 Audios['사용할 배경음악'] 을 선택해주십시오.
   *
   *  배경음악은 자동으로 재생되며, 반복 재생됩니다.
   *  배경음악의 재생을 제어하고 싶다면, this.bgm 을 사용하십시오.
   *  가령 배경음악을 중단하고 싶다면, this.bgm.stop() 을 사용할 수 있습니다.
   */
  static readonly BGM: Audios|null = null

  constructor() {
    super({ key: NewScene.Key, active: NewScene.AutoStart })

    this.generateMap(Storages, '{{ STORAGE_KEY }}')
    this.generateScript(Storages, '{{ STORAGE_KEY }}')
  }

  init(data: object = {}): void {
    // 필요하다면 전장의 안개를 활성화합니다. gui씬에서는 사용하지 마십시오.
    // this.fow.enable()
    {{ USING_DIALOGUE_GUI_SCENE }}
    super.init(data)
    // 이 아래에 작성하세요

  }

  preload(): void {
    super.preload()
    // 이 아래에 작성하세요

  }

  create(): void {
    super.create()
    // 이 아래에 작성하세요

  }

  update(time: number, delta: number): void {
    super.update(time, delta)
    // 이 아래에 작성하세요
    
  }
}