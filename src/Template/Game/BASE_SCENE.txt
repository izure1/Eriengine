import Phaser from 'phaser'
{{ DATA_LISTS }}

export default class EriengineScene extends Phaser.Scene {

    protected runScript(callbacks?: ((...args: any) => void)[], ...args: any): void {
        if (!callbacks)  {
            return
        }
        callbacks.forEach((callback): void => callback.call(this, args))
    }

    private loadImage(): void {
        for (const name in Images) {
            const { key } = Images[name as keyof typeof Images]
            this.load.image(key, key)
        }
    }

    private loadAudio(): void {
        for (const name in Audios) {
            const { key } = Audios[name as keyof typeof Audios]
            this.load.audio(key, key)
        }
    }

    private loadVideo(): void {
        for (const name in Videos) {
            const { key } = Videos[name as keyof typeof Videos]
            this.load.video(key, key)
        }
    }

    private loadSpritesheet(): void {
        for (const name in Animations) {
            const { key, texture, frameWidth, frameHeight } = Animations[name as keyof typeof Animations]
            this.load.spritesheet(texture, texture, { frameWidth, frameHeight })
        }
    }

    protected loadAssets(): void {
        this.load.setPath('Asset/')
        this.loadImage()
        this.loadAudio()
        this.loadVideo()
        this.loadSpritesheet()
    }

    protected createAnimation(): void {
        for (const name in Animations) {
            const { key, texture, frameRate, start, end, repeat } = Animations[name as keyof typeof Animations]
            if (this.anims.exists(key)) {
                continue
            }
            this.anims.create({
                key,
                frames: this.anims.generateFrameNumbers(texture, { start, end }),
                frameRate,
                repeat
            })
        }
    }

}